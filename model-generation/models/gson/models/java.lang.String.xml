<?xml version="1.0"?><ts><start>s0</start><states><state id="sX"><transition target="s0" action="epsilon" proba="1.0"></transition></state><state id="s11"><transition target="s11" action="java.lang.String.format(java.lang.String,java.lang.Object[])" proba="0.4"></transition><transition target="sX" action="epsilon" proba="0.6"></transition></state><state id="s10"><transition target="s11" action="java.lang.String.format(java.lang.String,java.lang.Object[])" proba="0.125"></transition><transition target="s10" action="java.lang.String.valueOf(java.lang.Object)" proba="0.25"></transition><transition target="sX" action="epsilon" proba="0.625"></transition></state><state id="s13"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s12"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s15"><transition target="sX" action="epsilon" proba="0.6666666666666666"></transition><transition target="s2" action="java.lang.String.substring(int,int)" proba="0.3333333333333333"></transition></state><state id="s14"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s17"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s16"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s19"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s18"><transition target="s19" action="java.lang.String.invoke(java.lang.Object,java.lang.Object[])" proba="1.0"></transition></state><state id="s0"><transition target="s3" action="java.lang.String.valueOf(char)" proba="0.007518796992481203"></transition><transition target="s4" action="java.lang.String.hashCode()" proba="0.03759398496240601"></transition><transition target="s5" action="java.lang.String.equals(java.lang.Object)" proba="0.07518796992481203"></transition><transition target="s6" action="java.lang.String.contains(java.lang.CharSequence)" proba="0.48120300751879697"></transition><transition target="s7" action="java.lang.String.length()" proba="0.14285714285714285"></transition><transition target="s8" action="java.lang.String.replace(char,char)" proba="0.007518796992481203"></transition><transition target="s9" action="java.lang.String.charAt(int)" proba="0.007518796992481203"></transition><transition target="s20" action="java.lang.String.split(java.lang.String)" proba="0.015037593984962405"></transition><transition target="s11" action="java.lang.String.format(java.lang.String,java.lang.Object[])" proba="0.06015037593984962"></transition><transition target="s22" action="java.lang.String.valueOf(long)" proba="0.007518796992481203"></transition><transition target="s10" action="java.lang.String.valueOf(java.lang.Object)" proba="0.045112781954887216"></transition><transition target="s21" action="java.lang.String.indexOf(java.lang.String)" proba="0.007518796992481203"></transition><transition target="s13" action="java.lang.String.isEmpty()" proba="0.007518796992481203"></transition><transition target="s24" action="java.lang.String.startsWith(java.lang.String)" proba="0.015037593984962405"></transition><transition target="s12" action="java.lang.String.valueOf(int)" proba="0.007518796992481203"></transition><transition target="s23" action="java.lang.String.&lt;init&gt;(char[],int,int)" proba="0.007518796992481203"></transition><transition target="s14" action="java.lang.String.&lt;init&gt;(char[])" proba="0.022556390977443608"></transition><transition target="s17" action="java.lang.String.trim()" proba="0.007518796992481203"></transition><transition target="s16" action="java.lang.String.toUpperCase(java.util.Locale)" proba="0.007518796992481203"></transition><transition target="s27" action="java.lang.String.toCharArray()" proba="0.007518796992481203"></transition><transition target="s1" action="java.lang.String.indexOf(int)" proba="0.015037593984962405"></transition><transition target="s2" action="java.lang.String.substring(int,int)" proba="0.007518796992481203"></transition></state><state id="s1"><transition target="s1" action="java.lang.String.indexOf(int)" proba="0.5"></transition><transition target="s2" action="java.lang.String.substring(int,int)" proba="0.5"></transition></state><state id="s2"><transition target="sX" action="epsilon" proba="0.75"></transition><transition target="s15" action="java.lang.String.substring(int)" proba="0.125"></transition><transition target="s9" action="java.lang.String.charAt(int)" proba="0.125"></transition></state><state id="s3"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s4"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s5"><transition target="s5" action="java.lang.String.equals(java.lang.Object)" proba="0.23076923076923078"></transition><transition target="sX" action="epsilon" proba="0.6923076923076923"></transition><transition target="s25" action="java.lang.String.replace(java.lang.CharSequence,java.lang.CharSequence)" proba="0.07692307692307693"></transition></state><state id="s6"><transition target="s6" action="java.lang.String.contains(java.lang.CharSequence)" proba="0.4628099173553719"></transition><transition target="sX" action="epsilon" proba="0.5371900826446281"></transition></state><state id="s7"><transition target="s7" action="java.lang.String.length()" proba="0.08695652173913043"></transition><transition target="sX" action="epsilon" proba="0.2608695652173913"></transition><transition target="s9" action="java.lang.String.charAt(int)" proba="0.5652173913043478"></transition><transition target="s18" action="java.lang.String.newInstance(java.lang.Object[])" proba="0.043478260869565216"></transition><transition target="s2" action="java.lang.String.substring(int,int)" proba="0.043478260869565216"></transition></state><state id="s8"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s9"><transition target="s7" action="java.lang.String.length()" proba="0.125"></transition><transition target="sX" action="epsilon" proba="0.5625"></transition><transition target="s15" action="java.lang.String.substring(int)" proba="0.125"></transition><transition target="s9" action="java.lang.String.charAt(int)" proba="0.0625"></transition><transition target="s2" action="java.lang.String.substring(int,int)" proba="0.125"></transition></state><state id="s20"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s22"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s21"><transition target="s21" action="java.lang.String.indexOf(java.lang.String)" proba="0.5"></transition><transition target="s2" action="java.lang.String.substring(int,int)" proba="0.5"></transition></state><state id="s24"><transition target="sX" action="epsilon" proba="0.5"></transition><transition target="s26" action="java.lang.String.endsWith(java.lang.String)" proba="0.5"></transition></state><state id="s23"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s26"><transition target="s6" action="java.lang.String.contains(java.lang.CharSequence)" proba="1.0"></transition></state><state id="s25"><transition target="sX" action="epsilon" proba="1.0"></transition></state><state id="s27"><transition target="sX" action="epsilon" proba="1.0"></transition></state></states></ts>